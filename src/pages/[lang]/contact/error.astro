---
import Layout from "../../../layouts/Layout.astro";
import { createTranslator } from "../../../utils/i18n/i18n";
import { getLocalizedUrl, isValidLocale } from "../../../utils/i18n/locale";

// Extract locale from URL (first segment)
const currentLocale = Astro.url.pathname.split("/")[1];
const validLocale = isValidLocale(currentLocale) ? currentLocale : "en";
const t = createTranslator(validLocale);

// Utility to parse cookies from the request headers
function parseCookies(cookieHeader: string | null): Record<string, string> {
  const cookies: Record<string, string> = {};
  if (!cookieHeader) return cookies;
  cookieHeader.split(";").forEach((cookie) => {
    const [name, ...rest] = cookie.split("=");
    cookies[name.trim()] = rest.join("=").trim();
  });
  return cookies;
}

const cookies = parseCookies(Astro.request.headers.get("cookie"));

// Determine if we are in development mode
const isDev = import.meta.env.MODE === "development";

// If the error cookie is not present, redirect to localized contact page
if (!isDev && !cookies.contactError) {
  return Astro.redirect(getLocalizedUrl(validLocale, "/contact"));
} else if (!isDev) {
  // Remove the error cookie to prevent reloading the error page
  Astro.response.headers.set(
    "Set-Cookie",
    "contactError=; Max-Age=0; Path=/; HttpOnly; Secure; SameSite=Strict",
  );
}

// Decode the error message from the cookie if it exists
const errorMessage = cookies.contactError
  ? decodeURIComponent(cookies.contactError)
  : t("PAGE.contact.form.errorMessage");

const metaTitle = t("SEO.contact.title");
const metaDescription = t("SEO.contact.description");
---

<Layout
  title={metaTitle}
  description={metaDescription}
  type="website"
  noindex={true}
>
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold text-center">{t("SEO.contact.title")}</h1>
    <p class="text-center mt-4 text-red-500">
      {errorMessage}
    </p>
    <div class="text-center mt-8">
      <a
        href={getLocalizedUrl(validLocale, "/contact")}
        class="text-purple-400 hover:text-purple-300"
      >
        {t("OTHER.returnTo").replace("{page}", t("NAV.contact").toLowerCase())}
      </a>
    </div>
  </div>
</Layout>
